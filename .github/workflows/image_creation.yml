# @format

name: Deploy and Image Creation

on:
  workflow_run:
    workflows: ['Transfer Build to Azure']
    types:
      - completed
  workflow_call:
    inputs:
      resource_group:
        description: 'Azure Resource Group'
        required: true
        type: string
      net_location:
        description: 'The location of the network resources'
        required: true
        type: string
      vnet_name:
        description: 'Virtual Network Name'
        required: true
        type: string
      subnet_name:
        description: 'Subnet Name'
        required: true
        type: string
      version:
        description: 'Version for Image tag'
        required: true
        type: string
      nsg_name:
        description: 'Network Security Group Name'
        required: true
        type: string
      storage_account_name:
        description: 'Azure Storage Account Name'
        required: true
        type: string
      file_share_name:
        description: 'Azure File Share Name'
        required: true
        type: string
      storage_account_key:
        description: 'Azure Storage Account Key'
        required: true
        type: string
      source_files_path:
        description: 'Source Files Path in the File Share'
        required: true
        type: string
    secrets:
      AZURE_SUBSCRIPTION_ID:
        description: Your Azure subscription ID.
        required: true
      AZURE_TENANT_ID:
        description: Your Azure Active Directory tenant ID.
        required: true
      AZURE_CLIENT_ID:
        description: The application ID of your Azure AD application with access to the SMB share.
        required: true
      AZURE_CLIENT_SECRET:
        description: The client secret of your Azure AD application.
        required: true

jobs:
  deploy_and_create_image:
    # runs-on: [self-hosted, linux, osp-cloud-devOps-runner1]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Azure login
      uses: azure/login@v2
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
        # auth-type: IDENTITY
        # client-id: ${{ secrets.AZURE_CLIENT_ID }}
        # tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        # subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: variable
      run: |
        az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        echo "VM_NAME=$(echo "ccure${{ inputs.version }}" | tr '.' '-' )"  >> $GITHUB_ENV 

    - name: Retrieve VNet and Subnet details
      id: retrieve_vnet_subnet
      run: |
        SUBNET_ID=$(az network vnet subnet show --resource-group ${{ inputs.resource_group }} --vnet-name ${{ inputs.vnet_name }} --name ${{ inputs.subnet_name }} --query id -o tsv)
        echo "SUBNET_ID=${SUBNET_ID}" >> $GITHUB_ENV
        NSG_ID=$(az network nsg show --resource-group ${{ inputs.resource_group }} --name ${{ inputs.nsg_name }} --query id -o tsv)
        echo "NSG_ID=${NSG_ID}" >> $GITHUB_ENV

    - name: create Resource Group
      run: | 
        echo "Creating the Resource Group..."
        az group create --resource-group "${{ env.VM_NAME }}-rg" --location ${{ inputs.net_location }} 
        
    - name: Create Virtual Machine
      run: |
        az vm create --resource-group "${{ env.VM_NAME }}-rg" --name "${{ env.VM_NAME }}" \
          --location ${{ inputs.net_location }} --size Standard_D8as_v5 \
          --image Win2022Datacenter \
          --os-disk-name "${{ env.VM_NAME }}-osdisk" \
          --admin-username ccureuser --admin-password "YourStrongPassword123!"

    - name: Mount Init Script
      run: |
        az vm run-command invoke --resource-group ${{ env.VM_NAME }}-rg --name "${{ env.VM_NAME }}" \
          --command-id RunPowerShellScript --scripts @image_automation_scripts/azureFileShareSysprep.ps1 \
          --parameters 'StorageAccountName=${{ inputs.storage_account_name }}' \
                       'FileShareName=${{ inputs.file_share_name }}' \
                       'StorageAccountKey=${{ inputs.storage_account_key }}' \
                       'SourceFilesPath=${{ inputs.source_files_path }}' \
                       'DestinationPath=C:\\Users\\ccureuser\\Desktop\\build'

    - name: Deallocate Virtual Machine
      run: |
        az vm deallocate --resource-group "${{ env.VM_NAME }}-rg" --name "${{ env.VM_NAME }}"

    - name: Generalize Virtual Machine
      run: |
        az vm generalize --resource-group "${{ env.VM_NAME }}-rg" --name "${{ env.VM_NAME }}"

    - name: Create Shared Image Gallery image version
      run: |
        az sig image-version create --resource-group ${{ inputs.resource_group }} \
          --gallery-name CCURE_image_gallery \
          --gallery-image-definition ${{ inputs.version }} \
          --gallery-image-version ${{ inputs.version }} \
          --source /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ env.VM_NAME }}-rg/providers/Microsoft.Compute/virtualMachines/${{ env.VM_NAME }}

    - name: Display Image Details
      run: |
        az sig image-definition list --gallery-name CCURE_image_galley --resource-group ${{ inputs.resource_group }}

    - name: Delete Virtual Machine
      run: |
        az vm delete --resource-group "${{ env.VM_NAME }}-rg" --name "${{ env.VM_NAME }}" --yes

    - name: Delete Resource Group
      run: | 
        echo "Deleting the Resource Group..."
        az group delete \
        -n ${{ inputs.resource_group }} \ 
        --force-deletion-types Microsoft.Compute/virtualMachines \
        --yes \
        --no-wait
